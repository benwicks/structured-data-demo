// Code generated by dagger-compiler.  Do not edit.
package com.benjaminwicks.structureddatademo.dataFormatDetails;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class DataFormatDetailsModule$$ModuleAdapter extends ModuleAdapter<DataFormatDetailsModule> {
  private static final String[] INJECTS = { "members/com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormatDetailsView", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public DataFormatDetailsModule$$ModuleAdapter() {
    super(com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormatDetailsModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, false /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, DataFormatDetailsModule module) {
    bindings.contributeProvidesBinding("com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormat", new ProvideDataFormatProvidesAdapter(module));
    bindings.contributeProvidesBinding("com.benjaminwicks.structureddatademo.dataFormatDetails.DataParsingMethod", new ProvideDataParsingMethodProvidesAdapter(module));
  }

  /**
   * A {@code Binding<com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormat>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormat>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideDataFormatProvidesAdapter extends ProvidesBinding<DataFormat>
      implements Provider<DataFormat> {
    private final DataFormatDetailsModule module;

    public ProvideDataFormatProvidesAdapter(DataFormatDetailsModule module) {
      super("com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormat", IS_SINGLETON, "com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormatDetailsModule", "provideDataFormat");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormat>}.
     */
    @Override
    public DataFormat get() {
      return module.provideDataFormat();
    }
  }

  /**
   * A {@code Binding<com.benjaminwicks.structureddatademo.dataFormatDetails.DataParsingMethod>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.benjaminwicks.structureddatademo.dataFormatDetails.DataParsingMethod>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideDataParsingMethodProvidesAdapter extends ProvidesBinding<DataParsingMethod>
      implements Provider<DataParsingMethod> {
    private final DataFormatDetailsModule module;

    public ProvideDataParsingMethodProvidesAdapter(DataFormatDetailsModule module) {
      super("com.benjaminwicks.structureddatademo.dataFormatDetails.DataParsingMethod", IS_SINGLETON, "com.benjaminwicks.structureddatademo.dataFormatDetails.DataFormatDetailsModule", "provideDataParsingMethod");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.benjaminwicks.structureddatademo.dataFormatDetails.DataParsingMethod>}.
     */
    @Override
    public DataParsingMethod get() {
      return module.provideDataParsingMethod();
    }
  }
}
